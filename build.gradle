buildscript {
  ext {
    indraVersion = "1.3.1"
  }
}

plugins {
  id "net.kyori.indra" version "$indraVersion" apply false
  id "net.kyori.indra.checkstyle" version "$indraVersion" apply false
  id "net.kyori.indra.license-header" version "$indraVersion" apply false
  id "net.kyori.indra.publishing.sonatype" version "$indraVersion" apply false

  id "com.adarshr.test-logger" version "3.0.0" apply false
}

group "net.kyori"
version "4.8.0-SNAPSHOT"
description "A user-interface library for Minecraft: Java Edition."

def applyJarMetadata(project, moduleName) {
  if("jar" in project.tasks.names) {
    project.tasks.named("jar", Jar).configure {
      manifest.attributes(
        "Automatic-Module-Name": moduleName,
        "Specification-Title": moduleName,
        "Specification-Version": project.version,
        "Specification-Vendor": "KyoriPowered"
      )
      if(project.grgit) {
        manifest.attributes(
          "Git-Commit": project.grgit.head().id,
          "Git-Branch": project.grgit.branch.current().name
        )
      }
    }
  }
}

subprojects {
  // The bom is special... this is a bit ugly, but not much more we can do without making our own script plugin
  if(name != "adventure-bom") {
    apply plugin: "net.kyori.indra"
    apply plugin: "net.kyori.indra.checkstyle"
    apply plugin: "net.kyori.indra.license-header"
    apply plugin: "com.adarshr.test-logger"

    testlogger {
      theme("mocha-parallel")
      showPassed(false)
    }

    configurations.testCompileClasspath {
      exclude group: "junit" // brought in by google's libs
    }

    repositories {
      mavenLocal()
      mavenCentral()
    }

    dependencies {
      api(platform(project(":adventure-bom")))
      checkstyle("ca.stellardrift:stylecheck:0.1")
      testImplementation("com.google.guava:guava-testlib:30.1.1-jre")
      testImplementation("com.google.truth:truth:1.1.2")
      testImplementation("com.google.truth.extensions:truth-java8-extension:1.1.3")
      testImplementation(platform("org.junit:junit-bom:5.7.2"))
      testImplementation("org.junit.jupiter:junit-jupiter-api")
      testImplementation("org.junit.jupiter:junit-jupiter-engine")
      testImplementation("org.junit.jupiter:junit-jupiter-params")
    }

    javadoc {
      options.tags(["sinceMinecraft:a:Since Minecraft:"])
    }
  }

  // All projects
  apply plugin: "net.kyori.indra.publishing.sonatype"

  indra {
    javaVersions {
      testWith(8, 11, 15)
    }

    github("KyoriPowered", "adventure") {
      ci = true
    }
    mitLicense()

    configurePublications {
      pom {
        developers {
          developer {
            id = "kashike"
            timezone = "America/Vancouver"
          }

          developer {
            id = "lucko"
            name = "Luck"
            url = "https://lucko.me"
            email = "git@lucko.me"
          }

          developer {
            id = "zml"
            name = "zml"
            timezone = "America/Vancouver"
          }

          developer {
            id = "Electroid"
          }
        }
      }
    }
  }

}
